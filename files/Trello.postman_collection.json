{
	"info": {
		"_postman_id": "0e1b27d0-7526-4c29-a170-50ecab7f913b",
		"name": "Trello",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "CREATE Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Board should be Created\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"boardName\"));\r",
							"    pm.expect(jsonData.closed).to.eql(false);\r",
							"    pm.expect(jsonData.prefs.permissionLevel).to.eql(\"private\");\r",
							"});\r",
							"\r",
							"let response = pm.response.json();\r",
							"pm.environment.set(\"boardid\", response.id);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"pm.environment.set(\"boardName\",getBoardName());\r",
							"\r",
							"function getRandomName(){\r",
							"    const boardName = \"My Board \"+parseInt(Math.random()*10000);\r",
							"    console.log(boardName);\r",
							"    return boardName;\r",
							"}\r",
							"\r",
							"function getBoardName(){\r",
							"    var currentBoardNumber=pm.environment.get(\"currentBoardNumber\");\r",
							"    \r",
							"    if(currentBoardNumber)\r",
							"        currentBoardNumber++;\r",
							"    else\r",
							"        currentBoardNumber=1;\r",
							"    \r",
							"    var boardName = \"My Board \"+ currentBoardNumber;\r",
							"\r",
							"    pm.environment.set(\"boardName\",boardName);\r",
							"    pm.environment.set(\"currentBoardNumber\",currentBoardNumber);\r",
							"    return boardName;\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "key",
						"value": "{{apiKey}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}/1/boards/?name={{boardName}}&key={{apiKey}}&token={{token}}&defaultLists=false",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "{{boardName}}"
						},
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "defaultLists",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "CREATE List Todo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response = pm.response.json();\r",
							"pm.environment.set(\"listId1\", response.id);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"List name should be ToDo\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"ToDo\");\r",
							"    pm.expect(jsonData.closed).to.eql(false)\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "key",
						"value": "{{apiKey}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/1/boards/{{boardid}}/lists/?name=ToDo&key={{apiKey}}&token={{token}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"boards",
						"{{boardid}}",
						"lists",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "ToDo"
						},
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "CREATE List Done",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response = pm.response.json();\r",
							"pm.environment.set(\"listId2\", response.id);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"List name should be Done\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Done\");\r",
							"    pm.expect(jsonData.closed).to.eql(false)\r",
							"});\r",
							"\r",
							"pm.test(\"List should be in current Board\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.idBoard).to.eql(pm.environment.get(\"boardid\"));\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "key",
						"value": "{{apiKey}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/1/boards/{{boardid}}/lists/?name=Done&key={{apiKey}}&token={{token}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"boards",
						"{{boardid}}",
						"lists",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "Done"
						},
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/1/boards/{{boardid}}/lists/?key={{apiKey}}&token={{token}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"boards",
						"{{boardid}}",
						"lists",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "Demo",
							"disabled": true
						},
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "CREATE Card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response = pm.response.json();\r",
							"pm.environment.set(\"cardId\", response.id);\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Card should be Created\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Learn Postman\");\r",
							"    pm.expect(jsonData.closed).to.eql(false)\r",
							"});\r",
							"\r",
							"pm.test(\"Card should be in current ToDo List\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.idBoard).to.eql(pm.environment.get(\"boardid\"));\r",
							"    pm.expect(jsonData.idList).to.eql(pm.environment.get(\"listId1\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Votes and attachments should be zero\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.badges.votes).to.eql(0);\r",
							"    pm.expect(jsonData.badges.attachments).to.eql(0);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "key",
						"value": "{{apiKey}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/1/cards/?name=Learn Postman&key={{apiKey}}&token={{token}}&desc=This is just a demo&idList={{listId1}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"cards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "Learn Postman"
						},
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "desc",
							"value": "This is just a demo"
						},
						{
							"key": "idList",
							"value": "{{listId1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE Card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Card should be Updated\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Learn Postman\");\r",
							"    pm.expect(jsonData.closed).to.eql(false)\r",
							"});\r",
							"\r",
							"pm.test(\"Card should be in Done List\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.idBoard).to.eql(pm.environment.get(\"boardid\"));\r",
							"    pm.expect(jsonData.idList).to.eql(pm.environment.get(\"listId2\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "key",
						"value": "{{apiKey}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/1/cards/{{cardId}}/?key={{apiKey}}&token={{token}}&idList={{listId2}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"cards",
						"{{cardId}}",
						""
					],
					"query": [
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "idList",
							"value": "{{listId2}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response = pm.response.json();\r",
							"\r",
							"pm.test(\"Description is not Empty\", function () {\r",
							"\tpm.expect(response.desc).to.be.not.empty;\r",
							"});\r",
							"\r",
							"pm.test(\"Members voted should be NULL\", function () {\r",
							"\tpm.expect(response.idMembersVoted).to.be.eql([]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/1/cards/{{cardId}}?key={{apiKey}}&token={{token}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"cards",
						"{{cardId}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"deleteRequestId\",pm.info.requestId);\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.environment.unset(\"currentBoardNumber\");\r",
							"pm.environment.unset(\"boardName\");\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/{{boardid}}/?fields=name,url&key={{apiKey}}&token={{token}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						"{{boardid}}",
						""
					],
					"query": [
						{
							"key": "fields",
							"value": "name,url"
						},
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Boards",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response = pm.response.json();\r",
							"\r",
							"var boardid=\"\";\r",
							"var size = response.length;\r",
							"for(var i=0; i<size;i++){\r",
							"\tif(size!=[]){\r",
							"\t\tconsole.log(response[i].id);\r",
							"\t\tboardid = response[i].id;\r",
							"\t\tpm.environment.set(\"boardid\",boardid);\r",
							"\t\tpostman.setNextRequest(pm.environment.get(\"deleteRequestId\"));\r",
							"\t}\r",
							"\telse\r",
							"\t\tpostman.setNextRequest(null);\r",
							"}\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/members/me/boards?fields=name,url&key={{apiKey}}&token={{token}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"members",
						"me",
						"boards"
					],
					"query": [
						{
							"key": "fields",
							"value": "name,url"
						},
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "apiKey",
			"value": "Your Key"
		},
		{
			"key": "token",
			"value": "Your Token"
		},
		{
			"key": "baseURL",
			"value": "https://api.trello.com"
		},
		{
			"key": "boardid",
			"value": ""
		},
		{
			"key": "listId1",
			"value": ""
		},
		{
			"key": "listId2",
			"value": ""
		},
		{
			"key": "cardId",
			"value": ""
		}
	]
}